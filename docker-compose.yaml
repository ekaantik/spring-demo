version: '3.8'

services:
  demo:
    container_name: spring-backend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-demo:5432/ekaantik-gradle-starter
      SPRING_DATASOURCE_USERNAME: ekaantik-admin
      SPRING_DATASOURCE_PASSWORD: ekaantik@123
    depends_on:
      - postgres-demo

  postgres-demo:
    container_name: postgres-db
    image: postgres:15.2      
    environment:
      POSTGRES_DB: ekaantik-gradle-starter
      POSTGRES_USER: ekaantik-admin
      POSTGRES_PASSWORD: ekaantik@123
    ports:
      - "5432:5432"

  redis-cache:
    container_name: redis-cache
    image: redis:7.2.4-alpine
    restart: always
    ports:
      - "6379:6379"
    command: ["sh", "-c", "rm -f /data/dump.rdb && redis-server"]
    volumes:
      - redis-cache:/data

volumes:
  redis-cache:
    driver : local